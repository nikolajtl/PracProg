# Compiler
CXX = g++

# Compiler flags
CXXFLAGS = -Wall -Wextra -std=c++23

# Source files
SRC = main.cpp sfuns.cpp

# Object files
OBJ = $(SRC:.cpp=.o)

# Executable name
TARGET = main

# Data file generated by your program
DATA_FILE_ERF = data_erf.txt
DATA_FILE_GAMMA = data_gamma.txt
DATA_FILE_LNGAMMA = data_lngamma.txt

# Default rule to build the executable
all: $(TARGET)

# Link object files to create the final executable
$(TARGET): $(OBJ)
	$(CXX) $(OBJ) -o $(TARGET)

# Compile .cpp files into .o files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up compiled files
clean:
	rm -f $(OBJ) $(TARGET) $(DATA_FILE_ERF) tabulated_data.txt data_gamma.txt data_lngamma.txt plot_erf.pdf plot_gamma.pdf

# Run the program
run: $(TARGET)
	./$(TARGET)
	$(MAKE) plot

# Generate the plot using gnuplot
plot: $(DATA_FILE_ERF) $(DATA_FILE_GAMMA)
	gnuplot -e " set samples 1000; set terminal pdf; set output 'plot_erf.pdf'; \
		set title 'Error function'; set xlabel 'x'; set ylabel 'erf(x)'; set yrange [-1.1 : 1.1]; \
		set key bottom right; \
		plot '$(DATA_FILE_ERF)' using 1:2 with lines title 'Implemented function', \
		'tabulated_data.txt' using 1:2 with points title 'Tabulated values'"
	gnuplot -e " set samples 1000; set terminal pdf; set output 'plot_gamma.pdf'; \
		set title 'Gamma function'; set xlabel 'x'; set ylabel 'gamma(x)'; set yrange [-6 : 6]; \
		set key bottom right; \
		plot '$(DATA_FILE_GAMMA)' using 1:2 with lines title 'Gamma', \
		'$(DATA_FILE_LNGAMMA)' using 1:2 with lines title 'Natural logarithm of gamma' "